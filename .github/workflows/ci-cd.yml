name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Проверка кода и установка зависимостей
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # Сборка и публикация Docker образа для бэкенда
      - name: Build and push backend Docker image
        run: |
          docker build -t astaeas/myapp-backend:${{ github.sha }} -f backend/Dockerfile ./backend
          docker tag astaeas/myapp-backend:${{ github.sha }} docker.io/astaeas/myapp-backend:latest
          docker push docker.io/astaeas/myapp-backend:${{ github.sha }}
          docker push docker.io/astaeas/myapp-backend:latest

      # Сборка и публикация Docker образа для фронтенда
      - name: Build and push frontend Docker image
        run: |
          docker build -t astaeas/myapp-frontend:${{ github.sha }} -f frontend/Dockerfile ./frontend
          docker tag astaeas/myapp-frontend:${{ github.sha }} docker.io/astaeas/myapp-frontend:latest
          docker push docker.io/astaeas/myapp-frontend:${{ github.sha }}
          docker push docker.io/astaeas/myapp-frontend:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Copy SSH Key
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H 192.168.56.2 >> ~/.ssh/known_hosts

      - name: Deploy to server
        run: |
          ssh danila@192.168.56.2 "docker pull astaeas/myapp-backend:latest && \
          docker pull astaeas/myapp-frontend:latest && \
          docker stop myapp-backend || true && \
          docker rm myapp-backend || true && \
          docker run -d --name myapp-backend -p 5000:5000 astaeas/myapp-backend:latest && \
          docker stop myapp-frontend || true && \
          docker rm myapp-frontend || true && \
          docker run -d --name myapp-frontend -p 3000:3000 astaeas/myapp-frontend:latest"

